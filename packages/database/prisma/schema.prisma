generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  verified  Boolean  @default(false)
  balance   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders  Order[]
  batches Batch[]
}

model StockSite {
  id        String   @id @default(cuid())
  name      String   @unique
  active    Boolean  @default(true)
  price     Int      @default(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Batch {
  id              String   @id @default(cuid())
  userId          String
  totalOrders     Int
  completedOrders Int      @default(0)
  failedOrders    Int      @default(0)
  totalCost       Int
  status          String   @default("PROCESSING")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders Order[]

  @@index([userId])
}

model Order {
  id           String   @id @default(cuid())
  userId       String
  batchId      String?
  taskId       String   @unique
  site         String
  stockId      String
  stockUrl     String
  status       String   @default("PENDING")
  cost         Int
  stockTitle   String?
  stockImage   String?
  stockAuthor  String?
  stockFormat  String?
  downloadLink String?
  fileName     String?
  errorMessage String?
  retryCount   Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  batch Batch? @relation(fields: [batchId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([batchId])
  @@index([taskId])
}
